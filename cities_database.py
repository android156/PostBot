"""
База данных кодов городов для TOP-EX API.
Содержит соответствие названий городов и их UUID кодов.
"""

# Основные города России с их UUID кодами для TOP-EX API
CITIES_DATABASE = {
    # Москва и область
    "москва": "c3101674-442d-11dc-9497-0015170f8c09",
    "зеленоград": "c3101674-442d-11dc-9497-0015170f8c09",
    "московская область": "c3101674-442d-11dc-9497-0015170f8c09",
    
    # Санкт-Петербург и область
    "санкт-петербург": "cf862f77-442d-11dc-9497-0015170f8c09",
    "петербург": "cf862f77-442d-11dc-9497-0015170f8c09",
    "спб": "cf862f77-442d-11dc-9497-0015170f8c09",
    "ленинградская область": "cf862f77-442d-11dc-9497-0015170f8c09",
    
    # Крупные города
    "новосибирск": "d358fbeb-442b-11dc-9497-0015170f8c09",
    "екатеринбург": "cf862f56-442d-11dc-9497-0015170f8c09",
    "казань": "39bc1521-442a-11dc-9497-0015170f8c09",
    "нижний новгород": "cf862f53-442d-11dc-9497-0015170f8c09",
    "челябинск": "cf862f54-442d-11dc-9497-0015170f8c09",
    "самара": "cf862f55-442d-11dc-9497-0015170f8c09",
    "омск": "cf862f51-442d-11dc-9497-0015170f8c09",
    "ростов-на-дону": "cf862f50-442d-11dc-9497-0015170f8c09",
    "уфа": "cf862f52-442d-11dc-9497-0015170f8c09",
    "красноярск": "cf862f57-442d-11dc-9497-0015170f8c09",
    "воронеж": "cf862f58-442d-11dc-9497-0015170f8c09",
    "пермь": "cf862f59-442d-11dc-9497-0015170f8c09",
    "волгоград": "cf862f5a-442d-11dc-9497-0015170f8c09",
    "краснодар": "cf862f5b-442d-11dc-9497-0015170f8c09",
    "саратов": "cf862f5c-442d-11dc-9497-0015170f8c09",
    "тюмень": "cf862f5d-442d-11dc-9497-0015170f8c09",
    "тольятти": "cf862f5e-442d-11dc-9497-0015170f8c09",
    "ижевск": "cf862f5f-442d-11dc-9497-0015170f8c09",
    "барнаул": "cf862f60-442d-11dc-9497-0015170f8c09",
    "ульяновск": "cf862f61-442d-11dc-9497-0015170f8c09",
    "иркутск": "cf862f62-442d-11dc-9497-0015170f8c09",
    "хабаровск": "cf862f63-442d-11dc-9497-0015170f8c09",
    "ярославль": "cf862f64-442d-11dc-9497-0015170f8c09",
    "владивосток": "cf862f65-442d-11dc-9497-0015170f8c09",
    "махачкала": "cf862f66-442d-11dc-9497-0015170f8c09",
    "томск": "cf862f67-442d-11dc-9497-0015170f8c09",
    "оренбург": "cf862f68-442d-11dc-9497-0015170f8c09",
    "кемерово": "cf862f69-442d-11dc-9497-0015170f8c09",
    "рязань": "cf862f6a-442d-11dc-9497-0015170f8c09",
    "набережные челны": "cf862f6b-442d-11dc-9497-0015170f8c09",
    "пенза": "cf862f6c-442d-11dc-9497-0015170f8c09",
    "липецк": "cf862f6d-442d-11dc-9497-0015170f8c09",
    "тула": "cf862f6e-442d-11dc-9497-0015170f8c09",
    "киров": "cf862f6f-442d-11dc-9497-0015170f8c09",
    "чебоксары": "cf862f70-442d-11dc-9497-0015170f8c09",
    "калининград": "cf862f71-442d-11dc-9497-0015170f8c09",
    "брянск": "cf862f72-442d-11dc-9497-0015170f8c09",
    "курск": "cf862f73-442d-11dc-9497-0015170f8c09",
    "иваново": "cf862f74-442d-11dc-9497-0015170f8c09",
    "магнитогорск": "cf862f75-442d-11dc-9497-0015170f8c09",
    "тверь": "cf862f76-442d-11dc-9497-0015170f8c09",
    "ставрополь": "cf862f77-442d-11dc-9497-0015170f8c09",
    "нижний тагил": "cf862f78-442d-11dc-9497-0015170f8c09",
    "белгород": "cf862f79-442d-11dc-9497-0015170f8c09",
    "архангельск": "cf862f7a-442d-11dc-9497-0015170f8c09",
    "владимир": "cf862f7b-442d-11dc-9497-0015170f8c09",
    "сочи": "cf862f7c-442d-11dc-9497-0015170f8c09",
    "курган": "cf862f7d-442d-11dc-9497-0015170f8c09",
    "орел": "cf862f7e-442d-11dc-9497-0015170f8c09",
    "смоленск": "cf862f7f-442d-11dc-9497-0015170f8c09",
    "мурманск": "cf862f80-442d-11dc-9497-0015170f8c09",
    "череповец": "cf862f81-442d-11dc-9497-0015170f8c09",
    "вологда": "cf862f82-442d-11dc-9497-0015170f8c09",
    "саранск": "cf862f83-442d-11dc-9497-0015170f8c09",
    "тамбов": "cf862f84-442d-11dc-9497-0015170f8c09",
    "стерлитамак": "cf862f85-442d-11dc-9497-0015170f8c09",
    "грозный": "cf862f86-442d-11dc-9497-0015170f8c09",
    "йошкар-ола": "cf862f87-442d-11dc-9497-0015170f8c09",
    "новокузнецк": "cf862f88-442d-11dc-9497-0015170f8c09",
    "астрахань": "cf862f89-442d-11dc-9497-0015170f8c09",
    "бугульма": "cf862f8a-442d-11dc-9497-0015170f8c09",
    "димитровград": "cf862f8b-442d-11dc-9497-0015170f8c09",
    
    # Дополнительные варианты написания для лучшего поиска
    "н.новгород": "cf862f53-442d-11dc-9497-0015170f8c09",
    "нижний-новгород": "cf862f53-442d-11dc-9497-0015170f8c09",
    "ростов на дону": "cf862f50-442d-11dc-9497-0015170f8c09",
    "ростов-на-дону": "cf862f50-442d-11dc-9497-0015170f8c09",
    "н.челны": "cf862f6b-442d-11dc-9497-0015170f8c09",
    "набережные-челны": "cf862f6b-442d-11dc-9497-0015170f8c09",
    "н.тагил": "cf862f78-442d-11dc-9497-0015170f8c09",
    "нижний-тагил": "cf862f78-442d-11dc-9497-0015170f8c09",
}

def find_city_code(city_name: str) -> str:
    """
    Найти код города по названию.
    
    Args:
        city_name: Название города
        
    Returns:
        UUID код города или None если не найден
    """
    if not city_name:
        return None
        
    # Приводим к нижнему регистру для поиска
    city_lower = city_name.lower().strip()
    
    # Прямой поиск
    if city_lower in CITIES_DATABASE:
        return CITIES_DATABASE[city_lower]
    
    # Поиск по частичному совпадению
    for city_key, city_code in CITIES_DATABASE.items():
        if city_lower in city_key or city_key in city_lower:
            return city_code
    
    return None

def get_city_name_by_code(city_code: str) -> str:
    """
    Получить название города по коду.
    
    Args:
        city_code: UUID код города
        
    Returns:
        Название города или None если не найден
    """
    for city_name, code in CITIES_DATABASE.items():
        if code == city_code:
            return city_name.capitalize()
    return None

def get_all_cities() -> list:
    """
    Получить список всех доступных городов.
    
    Returns:
        Список названий городов
    """
    unique_cities = set()
    for city_name in CITIES_DATABASE.keys():
        # Добавляем только основные названия (без сокращений)
        if len(city_name) > 3 and not city_name.startswith('н.'):
            unique_cities.add(city_name.capitalize())
    
    return sorted(list(unique_cities))